type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  blogname: String! @default(value: "Agent.log")
  email: String! @unique
  bio: String
  posts: [Post!]! @relation(name:"PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name:"LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentsOfUser", onDelete: CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  user: User! @relation(name:"PostsOfUser")
  title: String!
  url: String!
  content: String!
  hashtags: [Hashtag!]! @relation(name:"HashtagsOfPost", onDelete: SET_NULL)
  series: Series @relation(name:"SeriesOfPost")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User! @relation(name:"LikesOfUser")
  post: Post! @relation(name: "LikesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name:"CommentsOfUser")
  post: Post! @relation(name: "CommentsOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Hashtag {
    id: ID! @id
    name: String! @unique
    explanation: String
    posts: [Post!]! @relation(name:"HashtagsOfPost", onDelete: SET_NULL)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    postsCount: Int! @default(value: 0)
}

type Series {
    id: ID! @id
    user:    User!
    title:   String!
    image:   File
    posts: [Post!]! @relation(name:"SeriesOfPost")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}